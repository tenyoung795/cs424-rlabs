const unsigned int ON_THRESHOLD = 50;
const unsigned int OFF_THRESHOLD = 58;

const unsigned int HIGH = 80;
const unsigned int LOW = 20;

enum TurnDirection {
    LEFT = 0,
    RIGHT = 1,
};

enum Stage {
    NORMAL = 0,
    REVERSING = 1,
    RETRYING = 2,
    DONE = 3,
};

unsigned int scaleLight;
unsigned long duration;
TurnDirection turnDirection = 0;
bool onTape = false;
Stage stage = 0;

void refreshScreen() {
    ClearScreen();

    if (turnDirection == LEFT) {
        TextOut(0, 0, "->");
    } else {
        TextOut(0, 0, "<-");
    }

    if (onTape) {
        TextOut(0, 8, "on tape");
    } else {
        TextOut(0, 8, "off tape");
    }

    switch (stage) {
    case NORMAL:
        TextOut(0, 16, "normal");
        break;
    case REVERSING:
        TextOut(0, 16, "reversing");
        break;
    case RETRYING:
        TextOut(0, 16, "retrying");
        break;
    case DONE:
        TextOut(0, 16, "done");
        break;
    }
    NumOut(66, 16, duration);

    TextOut(0,24,"scaleLight");
    NumOut(0,32,scaleLight);

    // Line 7
    NumOut(0,40,(CurrentTick()-FirstTick())/1000);
}

task display() {
    while (stage != DONE) {
        refreshScreen();
        Wait(100);
    }
    refreshScreen();
    Wait(10000);
}

task main() {
    SetSensorLight(IN_3);

    ResetTachoCount(OUT_AC);
    OnFwd(OUT_A, HIGH);
    OnFwd(OUT_C, LOW);

    start display;
    unsigned long startTick = CurrentTick();
    while (stage != DONE) {
        scaleLight = SensorValue(IN_3);

        if (onTape) {
            if (scaleLight > OFF_THRESHOLD) {
                onTape = false;
                // When we are reversig, we just want to get back on the tape.
                if (stage != REVERSING) {
                    stage = NORMAL;
                    startTick = CurrentTick();
                    turnDirection = !turnDirection;
                    if (turnDirection == LEFT) {
                        OnFwd(OUT_A, HIGH);
                        OnFwd(OUT_C, LOW);
                    } else {
                        OnFwd(OUT_A, LOW);
                        OnFwd(OUT_C, HIGH);
                    }
                }
            }
        } else {
            if (scaleLight <= ON_THRESHOLD) {
                onTape = true;
            }
            duration = CurrentTick() - startTick;
            switch (stage) {
            case NORMAL:
                if (duration > 1800) {
                    if (turnDirection == LEFT) {
                        OnRev(OUT_A, HIGH);
                        OnRev(OUT_C, LOW);
                    } else {
                        OnRev(OUT_A, LOW);
                        OnRev(OUT_C, HIGH);
                    }
                    stage = REVERSING;
                }
                break;
            case REVERSING:
                if (duration > 3600) {
                    turnDirection = !turnDirection;
                    if (turnDirection == LEFT) {
                        OnFwd(OUT_A, HIGH);
                        OnFwd(OUT_C, LOW);
                    } else {
                        OnFwd(OUT_A, LOW);
                        OnFwd(OUT_C, HIGH);
                    }
                    stage = RETRYING;
                }
                break;
            case RETRYING:
                if (duration > 5600) {
                    stage = DONE;
                }
                break;
            }
        }
    }
    Off(OUT_AC);
    PlayFile("startup.rso");
}
