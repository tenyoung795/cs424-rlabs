const unsigned int ON_THRESHOLD = 50;
const unsigned int OFF_THRESHOLD = 58;

const unsigned int HIGH = 80;
const unsigned int LOW = 20;

enum TurnDirection {
    LEFT = 0,
    RIGHT = 1,
};

unsigned int scaleLight;
TurnDirection turnDirection = 0;
bool onTape = true;
bool skipChange = false;

task display() {
	if (turnDirection == LEFT) {
	    TextOut(0, 0, "<-");
	} else {
	    TextOut(0, 0, "->");
	}
	
	if (onTape) {
		TextOut(0, 8, "on tape");
	} else {
		TextOut(0, 8, "off tape");
	}
	if (skipChange) {
		TextOut(50, 8, "skipping first");
	} else {
		TextOut(50, 8, "normal");
	}
	
	TextOut(0,16,"scaleLight");
	NumOut(0,24,scaleLight);
	
	// Line 7
	NumOut(0,32,(CurrentTick()-FirstTick())/1000);
        Wait(100);
}

task main() {
    ResetTachoCount(OUT_BC);
    OnFwdSync(OUT_BC, 75, 0);
	unsigned long offTicks = 0;
	unsigned long startTick = 0;

    SetSensorLight(IN_3);

	OnFwd(OUT_A, LOW);
	OnFwd(OUT_C, HIGH);

	start display;
    while (true) {
	scaleLight = SensorValue(IN_3);

	if (onTape) {
		if (scaleLight > OFF_THRESHOLD) {
			onTape = false;

			startTick = CurrentTick();
			if (skipChange) {
				skipChange = false;
			} else {
				turnDirection = !turnDirection;
				if (turnDirection == LEFT) {	
					OnFwd(OUT_A, LOW);
				 	OnFwd(OUT_C, HIGH);
				} else {
					OnFwd(OUT_A, HIGH);
				 	OnFwd(OUT_C, LOW);
	
				}
			}
		}
	} else {
		if (scaleLight <= ON_THRESHOLD) {
			onTape = true;
			
		}
		if (CurrentTick() - startTick >= 1500) {
			skipChange = true;
		}
	}
    }
}
